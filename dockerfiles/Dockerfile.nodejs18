FROM public.ecr.aws/lambda/nodejs:18

# Habilitar repositórios extras e instalar GCC 10
RUN yum update -y && \
    yum install -y gcc-c++ make python3 zip && \
    yum install -y gcc10-c++ && \
    yum clean all && \
    rm -rf /var/cache/yum

# Configurar GCC 10 como compilador padrão
ENV CC=gcc10-gcc \
    CXX=gcc10-g++ \
    CXXFLAGS="-std=c++20"

# Copiar arquivos do projeto
WORKDIR /layer
COPY package.json ./

# Instalar dependências
RUN npm install

# Organizar arquivos conforme estrutura da Lambda Layer
RUN mkdir -p /opt/nodejs/
RUN cp -r node_modules /opt/nodejs

# Detect architecture and set it as an argument
RUN arch=$(uname -m) && \
    if [ "$arch" = "x86_64" ]; then \
        echo "x86_64" > /tmp/arch; \
    elif [ "$arch" = "aarch64" ]; then \
        echo "arm64" > /tmp/arch; \
    else \
        echo "Unsupported architecture: $arch" && exit 1; \
    fi

# Criar arquivo ZIP do layer com nome baseado na arquitetura
RUN cd /opt && \
    ARCH=$(cat /tmp/arch) && \
    zip -r9 /layer/better-sqlite3-layer-nodejs18-${ARCH}.zip .

# Sobrescrever o ENTRYPOINT da imagem base
ENTRYPOINT []
CMD ["/bin/bash"]